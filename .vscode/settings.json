{
    "terminal.integrated.fontSize": 12,
    "editor.fontFamily": "'Cascadia Code', Monaco, Consolas, Monaco, 'Courier New', monospace",
    "editor.accessibilitySupport": "off",
    "editor.fontSize": 15,
    "editor.tabSize": 4,
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.fixAll": "explicit",
        "source.convertImportFormat": "explicit",
        "source.unusedImports": "explicit"
    },
    "editor.tokenColorCustomizations": {
        "comments": "#747474"
    },

    // Controls if quick suggestions should show up while typing
    "editor.quickSuggestions": {
        "other": true,
        "comments": false,
        "strings": false
    },
    
    // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
    "editor.acceptSuggestionOnCommitCharacter": true,

    // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
    "editor.acceptSuggestionOnEnter": "on",

    // Controls the delay in ms after which quick suggestions will show up.
    "editor.quickSuggestionsDelay": 1,

    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": true,

    // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
    "editor.tabCompletion": "on",

    // Controls whether sorting favours words that appear close to the cursor
    "editor.suggest.localityBonus": true,

    // Controls how suggestions are pre-selected when showing the suggest list
    "editor.suggestSelection": "first",

    // Enable word based suggestions
    "editor.wordBasedSuggestions": "matchingDocuments",

    // Enable parameter hints
    "editor.parameterHints.enabled": true,
    
    "window.zoomLevel": 0,

    "workbench.tree.indent": 10,
    "workbench.iconTheme": "vscode-icons",
    "workbench.colorTheme": "Default Dark Modern",
    "workbench.colorCustomizations": {
        "tree.indentGuidesStroke": "#0099ff",
        "activityBar.foreground":"#0099ff",
        "activityBarBadge.foreground":"#0099ff",
    },

    "files.autoSave": "afterDelay",
    "explorer.compactFolders": false,
    "clang-format.executable": "clang-format",
    "clang-format.style": "file",
    "clang-format.fallbackStyle": "Google",
    "clang-format.language.cpp.enable": true,
    "cmake.languageSupport.enableFileAPI": true,
    "ros.distro": "humble",
    "ros.rosSetupScript": "/opt/ros/humble/install/setup.bash",
    "ros.isolateEnvironment": false,
    "[python]": {
        "editor.formatOnType": true
    },
    "git.openRepositoryInParentFolders": "never",
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "python.autoComplete.extraPaths": [
        "/opt/ros/humble/lib/python3.10/site-packages",
    ],
    "python.analysis.extraPaths": [
        "/opt/ros/humble/lib/python3.10/site-packages",
    ],
    "C_Cpp.errorSquiggles": "disabled"
    
}
